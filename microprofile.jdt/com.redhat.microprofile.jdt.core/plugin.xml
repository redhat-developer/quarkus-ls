<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.5"?>
<plugin>
   
   <extension-point id="propertiesProviders" 
					name="%propertiesProviders.name"
					schema="schema/propertiesProviders.exsd" />
   <extension-point id="javaFeatureParticipants" 
					name="%javaFeatureParticipants.name"
					schema="schema/javaFeatureParticipants.exsd" />
   <extension-point id="projectLabelProviders" 
                    name="%projectLabelProviders.name" 
                    schema="schema/projectLabelProviders.exsd"/>
   
   <!-- Delegate command handler for application.properties file -->
   <extension point="org.eclipse.jdt.ls.core.delegateCommandHandler">
      <delegateCommandHandler class="com.redhat.microprofile.jdt.internal.core.ls.MicroProfileDelegateCommandHandler">
            <command id="microprofile/projectInfo"/>
            <command id="microprofile/propertyDefinition"/>
       </delegateCommandHandler>
   </extension>

   <!-- Delegate command handler for Java file -->
   <extension point="org.eclipse.jdt.ls.core.delegateCommandHandler">
      <delegateCommandHandler class="com.redhat.microprofile.jdt.internal.core.ls.MicroProfileDelegateCommandHandlerForJava">
            <command id="microprofile/java/codeLens"/>
            <command id="microprofile/java/hover"/>
            <command id="microprofile/java/diagnostics"/>
       </delegateCommandHandler>
   </extension>
  
   <!-- Delegate command handler for Java project types -->
   <extension point="org.eclipse.jdt.ls.core.delegateCommandHandler">
      <delegateCommandHandler class="com.redhat.microprofile.jdt.internal.core.ls.JavaProjectDelegateCommandHandler">
            <command id="microprofile/java/projectLabels"/>
      </delegateCommandHandler>
   </extension>

   <extension point="com.redhat.microprofile.jdt.core.projectLabelProviders">
      <provider class="com.redhat.microprofile.jdt.internal.core.providers.MavenProjectLabelProvider" />
      <provider class="com.redhat.microprofile.jdt.internal.core.providers.GradleProjectLabelProvider" />
   </extension>

   <!-- Microprofile Config support -->
   
   <extension point="com.redhat.microprofile.jdt.core.propertiesProviders">
      <!-- Properties provider from the MicroProfile @ConfigProperty annotation -->
      <provider class="com.redhat.microprofile.jdt.internal.config.properties.MicroProfileConfigPropertyProvider" />
   </extension>
   
   <extension point="com.redhat.microprofile.jdt.core.javaFeatureParticipants">
       <!-- Java hover for the MicroProfile @ConfigProperty annotation -->
      <hover class="com.redhat.microprofile.jdt.internal.config.java.MicroProfileConfigHoverParticipant" />   
   </extension>

   <!-- Microprofile Fault Tolerance support -->
   
   <extension point="com.redhat.microprofile.jdt.core.propertiesProviders">
      <!-- Properties provider from the MicroProfile Fault Tolerance annotations -->
      <provider class="com.redhat.microprofile.jdt.internal.faulttolerance.properties.MicroProfileFaultToleranceProvider" />
   </extension>
   
   <!-- Microprofile Metrics support -->
   
   <extension point="com.redhat.microprofile.jdt.core.propertiesProviders">
      <!-- Properties provider for MicroProfile Metrics -->
      <provider class="com.redhat.microprofile.jdt.internal.metrics.properties.MicroProfileMetricsProvider" />
   </extension>
   
   <!-- Microprofile OpenTracing support -->
   
   <extension point="com.redhat.microprofile.jdt.core.propertiesProviders">
      <!-- Properties provider for MicroProfile OpenTracing -->
      <provider class="com.redhat.microprofile.jdt.internal.opentracing.properties.MicroProfileOpenTracingProvider" />
   </extension>

   <!-- Microprofile Health support -->
   
   <extension point="com.redhat.microprofile.jdt.core.javaFeatureParticipants">
       <!-- Java diagnostics for the MicroProfile Health -->
      <diagnostics class="com.redhat.microprofile.jdt.internal.health.java.MicroProfileHealthDiagnosticsParticipant" />   
   </extension>
   
   <!-- Microprofile RestClient support -->
   
   <extension point="com.redhat.microprofile.jdt.core.propertiesProviders">
      <!-- Properties provider from the MicroProfile @RegisterRestClient annotation -->
      <provider class="com.redhat.microprofile.jdt.internal.restclient.properties.MicroProfileRegisterRestClientProvider" />
   </extension>
   
   <extension point="com.redhat.microprofile.jdt.core.javaFeatureParticipants">
       <!-- Java diagnostics for the MicroProfile RestClient -->
      <diagnostics class="com.redhat.microprofile.jdt.internal.restclient.java.MicroProfileRestClientDiagnosticsParticipant" />
      <codeLens class="com.redhat.microprofile.jdt.internal.restclient.java.MicroProfileRestClientCodeLensParticipant" />
   </extension>

   <!-- JAX-RS support -->
   
   <extension point="com.redhat.microprofile.jdt.core.javaFeatureParticipants">
       <!-- Java URL codeLens for JAX-RS -->
      <codeLens class="com.redhat.microprofile.jdt.internal.jaxrs.java.JaxRsCodeLensParticipant" />   
   </extension>
</plugin>
